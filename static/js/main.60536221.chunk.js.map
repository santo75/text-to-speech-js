{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","text","setText","volume","setVolume","pitch","setPitch","rate","setRate","useEffect","document","querySelector","value","className","id","placeholder","type","onChange","event","target","onClick","voice","window","speechSynthesis","getVoices","speech","SpeechSynthesisUtterance","lang","speak","htmlFor","min","max","step","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0NAwFeA,MArFf,WACC,MAAwBC,mBAAS,8BAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAwBN,mBAAS,KAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAmBA,OALAC,qBAAU,WACTC,SAASC,cAAc,WAAWC,MAAQT,EAC1CO,SAASC,cAAc,SAASC,MAAQL,EACxCG,SAASC,cAAc,UAAUC,MAAQP,KAGzC,sBAAKQ,UAAU,MAAf,UACC,8BACC,uBACCC,GAAG,YACHC,YAAY,gBACZF,UAAU,aACVG,KAAK,OACLC,SAAU,SAAAC,GAAK,OAAIhB,EAAQgB,EAAMC,OAAOP,YAG1C,8BACC,wBAAQC,UAAU,WAAWO,QA9BjB,WACd,IAEMC,EADGC,OAAOC,gBAAgBC,YACX,GACjBC,EAAS,IAAIC,yBACjBD,EAAOE,KAAO,KACdF,EAAOxB,KAAOA,EACdwB,EAAOlB,KAAOA,EACdkB,EAAOtB,OAASA,EAChBsB,EAAOpB,MAAQA,EACfoB,EAAOJ,MAAQA,EACfC,OAAOC,gBAAgBK,MAAMH,IAmB3B,oBAID,sBAAKZ,UAAU,wBAAf,UACC,wBAAOA,UAAU,QAAQgB,QAAQ,SAAjC,oBACkB,IAAT1B,EADT,SAGA,uBACCa,KAAK,QACLC,SAAU,SAAAC,GAAK,OAAId,EAAUc,EAAMC,OAAOP,QAC1CkB,IAAI,IACJC,IAAI,IACJC,KAAK,MACLlB,GAAG,SACHD,UAAU,mBAGZ,sBAAKA,UAAU,wBAAf,UACC,wBAAOA,UAAU,QAAQgB,QAAQ,OAAjC,kBACc,GAAPtB,EADP,SAGA,uBACCS,KAAK,QACLC,SAAU,SAAAC,GAAK,OAAIV,EAAQU,EAAMC,OAAOP,QACxCkB,IAAI,MACJC,IAAI,KACJjB,GAAG,OACHkB,KAAK,MACLnB,UAAU,mBAGZ,sBAAKA,UAAU,wBAAf,UACC,wBAAOA,UAAU,QAAQgB,QAAQ,QAAjC,mBACgB,GAARxB,EADR,SAGA,uBACCW,KAAK,QACLC,SAAU,SAAAC,GAAK,OAAIZ,EAASY,EAAMC,OAAOP,QACzCkB,IAAI,IACJC,IAAI,KACJC,KAAK,MACLlB,GAAG,QACHD,UAAU,uBCrEAoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASmC,eAAe,SAM1BZ,K","file":"static/js/main.60536221.chunk.js","sourcesContent":["import \"./App.css\";\nimport { React, useEffect, useState } from \"react\";\n\nfunction App() {\n\tconst [text, setText] = useState(\"Please enter a text first.\");\n\tconst [volume, setVolume] = useState(0.7);\n\tconst [pitch, setPitch] = useState(4);\n\tconst [rate, setRate] = useState(1.6);\n\tconst onPlay = () => {\n\t\tlet voices = [];\n\t\tvoices = window.speechSynthesis.getVoices();\n\t\tconst voice = voices[2];\n\t\tlet speech = new SpeechSynthesisUtterance();\n\t\tspeech.lang = \"en\";\n\t\tspeech.text = text;\n\t\tspeech.rate = rate;\n\t\tspeech.volume = volume;\n\t\tspeech.pitch = pitch;\n\t\tspeech.voice = voice;\n\t\twindow.speechSynthesis.speak(speech);\n\t};\n\tuseEffect(() => {\n\t\tdocument.querySelector(\"#volume\").value = volume;\n\t\tdocument.querySelector(\"#rate\").value = rate;\n\t\tdocument.querySelector(\"#pitch\").value = pitch;\n\t});\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div>\n\t\t\t\t<input\n\t\t\t\t\tid=\"textInput\"\n\t\t\t\t\tplaceholder=\"Enter text...\"\n\t\t\t\t\tclassName=\"input-text\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={event => setText(event.target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button className=\"btn-play\" onClick={onPlay}>\n\t\t\t\t\tPlay\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<div className=\"range-input-container\">\n\t\t\t\t<label className=\"label\" htmlFor=\"volume\">\n\t\t\t\t\tVolume({volume * 100}%):\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tonChange={event => setVolume(event.target.value)}\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tmax=\"1\"\n\t\t\t\t\tstep=\"0.1\"\n\t\t\t\t\tid=\"volume\"\n\t\t\t\t\tclassName=\"range-input\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"range-input-container\">\n\t\t\t\t<label className=\"label\" htmlFor=\"rate\">\n\t\t\t\t\tRate({rate * 10}%):\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tonChange={event => setRate(event.target.value)}\n\t\t\t\t\tmin=\"0.8\"\n\t\t\t\t\tmax=\"10\"\n\t\t\t\t\tid=\"rate\"\n\t\t\t\t\tstep=\"0.1\"\n\t\t\t\t\tclassName=\"range-input\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"range-input-container\">\n\t\t\t\t<label className=\"label\" htmlFor=\"pitch\">\n\t\t\t\t\tPitch({pitch * 10}%):\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tonChange={event => setPitch(event.target.value)}\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tmax=\"10\"\n\t\t\t\t\tstep=\"0.1\"\n\t\t\t\t\tid=\"pitch\"\n\t\t\t\t\tclassName=\"range-input\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}